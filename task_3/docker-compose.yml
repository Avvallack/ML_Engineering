version: '3.9'

services:
    db:
        restart: on-failure
        image: mysql/mysql-server:5.7.28
        container_name: mlflow_db
        expose:
            - "3306"
        networks:
            - backend
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - ./newdb:/var/lib/mysql

    web:
        restart: on-failure
        build: ./mlflow_server
        image: mlflow_server
        container_name: mlflow_server
        expose:
            - "5000"
        ports:
            - "5000:5000"
        networks:
            - frontend
            - backend
        environment:
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}

        command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root s3://mlflow-sd/mlflow/ --host 0.0.0.0


    application:
        restart: on-failure
        build: ./application
        image: ml_app
        container_name: ml_app
        networks:
            - frontend

        environment:
            - MLFLOW_TRACKING_URI=http://web:5000
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
        command: python /code/application.py


networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

volumes:
    dbdata:
